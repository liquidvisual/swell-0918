/*
    REM-CALC.CSS

    - updated: 06.10.16
    - liquidvisual.com
*/
//-----------------------------------------------------------------
// VARIABLES
//-----------------------------------------------------------------

/*
// This is the default html and body font-size for the base rem value.
$rem-base: 16px !default;

//-----------------------------------------------------------------
// STRIP UNIT
// It strips the unit of measure and returns it
//-----------------------------------------------------------------

@function strip-unit($num) {
    @return $num / ($num * 0 + 1);
}

//-----------------------------------------------------------------
// CONVERT TO REM
//-----------------------------------------------------------------

@function convert-to-rem($value, $base-value: $rem-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1rem;
  @if ($value == 0rem) { $value: 0; } // Turn 0rem into 0
  @return $value;
}

@function data($attr) {
  @if $namespace {
    @return '[data-' + $namespace + '-' + $attr + ']';
  }

  @return '[data-' + $attr + ']';
}

//-----------------------------------------------------------------
// REM CALC
//-----------------------------------------------------------------

@function rem-calc($values, $base-value: $rem-base) {
    $max: length($values);

    @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }

    $remValues: ();
    @for $i from 1 through $max {
        $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));
    }
    @return $remValues;
}
    */

//-----------------------------------------------------------------
//
//-----------------------------------------------------------------

/*
    EM-CALC.CSS

    - updated: 07.11.16
    - liquidvisual.com
*/
//-----------------------------------------------------------------
// VARIABLES
//-----------------------------------------------------------------

// This is the default html and body font-size for the base em value.
$em-base: 16px !default;

//-----------------------------------------------------------------
// STRIP UNIT
// It strips the unit of measure and returns it
//-----------------------------------------------------------------

@function strip-unit($num) {
    @return $num / ($num * 0 + 1);
}

//-----------------------------------------------------------------
// CONVERT TO EM
//-----------------------------------------------------------------

@function convert-to-em($value, $base-value: $em-base)  {
  $value: strip-unit($value) / strip-unit($base-value) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}

@function data($attr) {
  @if $namespace {
    @return '[data-' + $namespace + '-' + $attr + ']';
  }

  @return '[data-' + $attr + ']';
}

//-----------------------------------------------------------------
// EM CALC
//-----------------------------------------------------------------

@function rem-calc($values, $base-value: $em-base) {
    $max: length($values);

    @if $max == 1 { @return convert-to-em(nth($values, 1), $base-value); }

    $emValues: ();
    @for $i from 1 through $max {
        $emValues: append($emValues, convert-to-em(nth($values, $i), $base-value));
    }
    @return $emValues;
}

//-----------------------------------------------------------------
//
//-----------------------------------------------------------------